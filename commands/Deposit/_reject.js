/*CMD
  command: /reject
  help: 
  need_reply: false
  auto_retry_time: 
  folder: Deposit

  <<ANSWER

  ANSWER

  <<KEYBOARD

  KEYBOARD
  aliases: 
  group: 
CMD*/

// Bot Advertising
var ads = [
  "@MaximXEmojis - Dive into a collection of expressive emojis for every mood! Join now and add flair to your conversations.",
  "@MaximXSticker - Discover vibrant and diverse sticker packs to enhance your messaging experience. Join us for a visual delight!",
  "@MaximXBots - Engage with cutting-edge bots designed for fun, utility, and more. Join the bot revolution and elevate your Telegram experience!",
  "@MaximXWallpaper - Immerse yourself in a gallery of stunning wallpapers to revamp your device's look. Join for a daily dose of aesthetic inspiration.",
  "@MaximXIcons - Upgrade your profile with unique and stylish icons. Join now and make your profile stand out!",
  "@MaximXAnime - Dive into the world of anime with curated recommendations and community discussions. Join us and elevate your anime experience!"
]
var randomAd = ads[Math.floor(Math.random() * ads.length)]

// Message
var cap = `<b>Y·¥è·¥ú Ä P·¥Ä è·¥ç·¥á…¥·¥õ R·¥á“©·¥ú·¥ás·¥õ H·¥Äs B·¥á·¥á…¥ R·¥á·¥ä·¥á·¥Ñ·¥õ·¥á·¥Ö B è A·¥Ö·¥ç…™…¥</>

<b>R·¥á·¥Äs·¥è…¥s F·¥è Ä R·¥á·¥ä·¥á·¥Ñ·¥õ…™·¥è…¥ M·¥Ä è I…¥·¥Ñ ü·¥ú·¥Ö·¥á:</>
1. I…¥·¥†·¥Ä ü…™·¥Ö P·¥Ä è·¥ç·¥á…¥·¥õ S·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ.
2. S·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ P Ä·¥á·¥†…™·¥è·¥ús ü è Us·¥á·¥Ö.
3. P·¥Ä è·¥ç·¥á…¥·¥õ D…™s·¥Ñ Ä·¥á·¥ò·¥Ä…¥·¥Ñ è.
4. I…¥·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ P·¥Ä è·¥ç·¥á…¥·¥õ D·¥á·¥õ·¥Ä…™ üs.
5. S·¥ús·¥ò·¥á·¥Ñ·¥õ·¥á·¥Ö F Ä·¥Ä·¥ú·¥Ö·¥ú ü·¥á…¥·¥õ A·¥Ñ·¥õ…™·¥†…™·¥õ è.

<b>P ü·¥á·¥Äs·¥á R·¥á·¥†…™·¥á·¥° Y·¥è·¥ú Ä S·¥ú ô·¥ç…™ss…™·¥è…¥ A…¥·¥Ö T Ä è A…¢·¥Ä…™…¥ I“ì N·¥á·¥Ñ·¥áss·¥Ä Ä è</>.

üìÆ A·¥Ös: <a href='t.me/QuinxAds'>“®·¥ú…™…¥x A·¥Ös</a>
<blockquote>${randomAd}</blockquote>`

// Send Stickers
Api.sendSticker({
  chat_id: params,
  sticker:
    "CAACAgUAAxkBAAMXZ3jMyvtqcnsFowJsqZEvjizT3fsAAnsTAAJNHrlX1IC8GLxOVdk2BA",
  on_result: "/deleteafter5"
})
Api.sendMessage({
  chat_id: params,
  text: cap,
  parse_mode: "HTML",
  disable_web_page_preview: true,
  reply_markup: {
    inline_keyboard: [
      [
        { text: "‚óÅ B·¥Ä·¥Ñ·¥ã", callback_data: "/about" },
        { text: "C ü·¥ès·¥á ‚úï", callback_data: "/close" }
      ]
    ]
  }
})

Bot.sendMessage("‚ùé P·¥Ä è·¥ç·¥á…¥·¥õ R·¥á·¥ä·¥á·¥Ñ·¥õ·¥á·¥Ö")
Api.answerCallbackQuery({
  callback_query_id: request.id,
  text: "‚ùé R·¥á·¥ä·¥á·¥Ñ·¥õ·¥á·¥Ö",
  show_alert: false
})

